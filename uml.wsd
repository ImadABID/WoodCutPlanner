@startuml uml

package "fr.enseirb_matmeca.p220_iabied_nabrouk_wamine"{

    package "basic_geometry"{

        class basic_geometry.Point {

            - double x
            - double y

            + Point(double x, double y)\n\tthrows IllegalArgumentException
            + Point()
            + double getX()
            + void setX(double x)
            + double getY()
            + void setY(double y)

        }

        class basic_geometry.Polygon {

            + Polygon(List<Point> pts)
            + Polygon()
            + List<Point> getPts();
            + {static} boolean overlap(Polygon p1, Polygon p2)

        }
        basic_geometry.Polygon "1" *-- "*" basic_geometry.Point

        class basic_geometry.Rectangle {

            - double lenght
            - double width
            
            + Rectangle(Point leftTopPt, double lenght, double width)\n\tthrows IllegalArgumentException
            + Point getLeftTopPt()
            + double getLenght()
            + double getWidth()
            + {static} boolean overlap(Rectangle r1, Rectangle r2)
        }
        basic_geometry.Rectangle *-- basic_geometry.Point

        basic_geometry.Polygon <|-- basic_geometry.Rectangle

    }

    package "actor"{

        abstract class actor.Actor{
            # int id

            + int getId()
            + {static} Actor getByIdIfNExistCreateIt(List<? extends Actor> actors, int id) \n\tthrows IllegalArgumentException
        }

        class actor.Client{

        }

        class actor.Supplier{
            
        }

        actor.Actor <|-- actor.Client
        actor.Actor <|-- actor.Supplier

    }

    package "wood"{

        abstract class wood.WoodPiece {

            # int typeId
            # int idInsideGroup
            # int nbrPiecesFromType
            # Date critical_date
            # double price

            + WoodPiece(\n\tint typeId, int idInsideGroup, int nbrPiecesFromType,\n\tPolygone  polygone,\n\tDate critical_date,\n\tdouble price)\n\tthrows IllegalArgumentException
            + int getTypeId()
            + int getIdInsideGroup()
            + int getNbrPiecesFromType()
            + Polygon getPolygon()
            + Date getCritical_date()
            + double getPrice()

        }
        wood.WoodPiece *-- basic_geometry.Polygon

        class wood.Panel {
            + Panel(\n\tint typeId, int idInsideGroup, int nbrPiecesFromType,\n\tPolygone  polygone\n\tDate critical_date,\n\tdouble price,\n\tSupplier supplier)
            + Supplier getSupplier();
        }
        wood.Panel *-- actor.Supplier

        class wood.Board {
            + Board(\n\tint typeId, int idInsideGroup, int nbrPiecesFromType,\n\tPolygone  polygone\n\tDate critical_date,\n\tdouble price,\n\tClient client)
            + Client getClient();
        }
        wood.Board *-- actor.Client

        wood.WoodPiece <|-- wood.Panel
        wood.WoodPiece <|-- wood.Board

    }

}


@enduml